{"version":3,"sources":["webpack:///src/app/app.component.html","webpack:///src/app/engine/engine.component.html","webpack:///src/app/navbar/navbar.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/engine/engine.component.ts","webpack:///src/app/engine/engine.service.ts","webpack:///src/app/engine/polygon.ts","webpack:///src/app/navbar/navbar.component.scss","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/services/function.service.ts","webpack:///src/app/services/message.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","AppModule","declarations","imports","providers","bootstrap","EngineComponent","engServ","MS","FS","subscription","getMessage","subscribe","message","polygon","createScene","rendererCanvas","animate","relative","get3DPosition","clientX","clientY","button","onMouseDown","onStop","onMouseMove","EngineService","ngZone","frameId","cancelAnimationFrame","canvas","canvasRef","nativeElement","renderer","alpha","antialias","setSize","window","innerWidth","innerHeight","setClearColor","scene","camera","clientWidth","clientHeight","position","z","add","light","group","loadTransparentBackground","material","color","opacity","transparent","wireframe","aspect","heightSegments","Math","round","widthSegments","geometry","background","set","name","loadPoints","planeGeometry","vertices","positions","Float32Array","length","colors","vertex","i","toArray","setRGB","setAttribute","size","vertexColors","points","runOutsideAngular","document","readyState","render","addEventListener","resize","requestAnimationFrame","width","height","updateProjectionMatrix","x","getCurrentOffset","left","y","top","rayCaster","setFromCamera","intersects","intersectObjects","children","object","point","element","rect","getBoundingClientRect","pageYOffset","documentElement","clientTop","pageXOffset","clientLeft","providedIn","Polygon","count","MAX_POINTS","remove","line","lineGeometry","addPoint","updateLine","lineArray","attributes","array","slice","needsUpdate","show_points_in_polygon","setDrawRange","NavbarComponent","getObjectByName","pointPosition","pointColor","FunctionService","polygonPosition","pointX","pointY","point_in_polygon","is_point_in_polygon","vs","inside","j","xi","yi","xj","yj","intersect","MessageService","subject","next","asObservable","environment","production","version","bootstrapModule","defaultEncapsulation","None","err","console","log"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"\\n<app-navbar></app-navbar>\\n\\n<main role=\\\"main\\\" class=\\\"container\\\">\\n\\n    <app-engine></app-engine>\\n  \\n</main>\\n\\n\\n\\n\\n\\n\\n\";","export default \"<div class=\\\"engine-wrapper\\\">\\n  <canvas #rendererCanvas id=\\\"renderCanvas\\\" \\n    (mousedown)=\\\"mousedown($event)\\\" \\n    (mousemove)=\\\"mousemove($event)\\\" >\\n  </canvas>\\n</div>\\n\";","export default \"<nav class=\\\"navbar navbar-expand-sm navbar-light bg-light\\\" style=\\\"z-index: 1;\\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Maximum Coverage using GA</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-sm\\\" (click)=\\\"clear_clickHandler()\\\">Clear</button>\\n    </div>\\n\\n</nav> \";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { EngineComponent } from './engine/engine.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EngineComponent,\n    NavbarComponent,\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Vector3 } from 'three';\nimport { Subscription } from 'rxjs';\nimport { EngineService } from './engine.service';\nimport { MessageService } from '../services/message.service';\nimport { FunctionService } from '../services/function.service';\nimport { Polygon } from './polygon';\n\n\n@Component({\n  selector: 'app-engine',\n  templateUrl: './engine.component.html'\n})\nexport class EngineComponent implements OnInit {\n\n  subscription: Subscription;\n  private polygon:Polygon;\n\n  @ViewChild('rendererCanvas', {static: true})\n  public rendererCanvas: ElementRef<HTMLCanvasElement>;\n\n  constructor(private engServ: EngineService, private MS: MessageService, private FS: FunctionService) { \n    // subscribe to component messages\n    this.subscription = this.MS.getMessage().subscribe(message => {\n      \n      if (message == '') {\n         \n      }\n\n    });\n\n    this.polygon = new Polygon( this.engServ, this.FS );\n\n  }\n\n  public ngOnInit(): void {\n    this.engServ.createScene(this.rendererCanvas);\n    this.engServ.animate();\n  }\n\n  mousedown(e:MouseEvent) { \n    const relative:Vector3 = this.engServ.get3DPosition( e.clientX, e.clientY );\n\n    //left mouse click\n    if(e.button == 0) { \n      this.polygon.onMouseDown(relative)\n    }\n    //right mouse click\n    else if(e.button == 2) {\n      this.polygon.onStop(relative);\n    }\n  }\n\n  mouseup(e:MouseEvent) { \n\n  }\n\n  mousemove(e:MouseEvent) { \n    const relative:Vector3 = this.engServ.get3DPosition( e.clientX, e.clientY );\n    \n    this.polygon.onMouseMove(relative);\n  }\n\n}\n","import { Injectable, ElementRef, OnDestroy, NgZone } from '@angular/core';\nimport { Scene, WebGLRenderer, OrthographicCamera, AmbientLight, \n  Mesh, PlaneGeometry, Group, Raycaster, MeshLambertMaterial, Vector3, Color, BufferGeometry, BufferAttribute, Points, PointsMaterial } from 'three';\n\n@Injectable({ providedIn: 'root' })\nexport class EngineService implements OnDestroy {\n  private canvasRef: ElementRef;\n  private canvas: HTMLCanvasElement;\n  private renderer: WebGLRenderer;\n  private camera: OrthographicCamera;\n  private scene: Scene;\n  private light: AmbientLight;\n  public group: Group;\n\n  private frameId: number = null;\n\n  public constructor(private ngZone: NgZone) {}\n\n  public ngOnDestroy(): void {\n    if (this.frameId != null) {\n      cancelAnimationFrame(this.frameId);\n    }\n  }\n\n  public createScene(canvas: ElementRef<HTMLCanvasElement>): void {\n    this.canvasRef = canvas;\n    // The first step is to get the reference of the canvas element from our HTML document\n    this.canvas = canvas.nativeElement;\n\n    this.renderer = new WebGLRenderer({\n      canvas: this.canvas,\n      alpha: true,    // transparent background\n      antialias: true // smooth edges\n    });\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor(\"#000\", 1);\n\n    // create the scene\n    this.scene = new Scene();\n\n    this.camera = new OrthographicCamera(\n      this.canvas.clientWidth/-20, this.canvas.clientWidth/20, this.canvas.clientHeight/20, this.canvas.clientHeight/-20, 1, 1000\n    );\n    this.camera.position.z = 400;\n    this.scene.add(this.camera);\n\n    // soft white light\n    this.light = new AmbientLight( 0x404040 );\n    this.light.position.z = 10;\n    this.scene.add(this.light);\n\n    this.group = new Group();\n    this.scene.add( this.group );\n\n    //background image\n    this.loadTransparentBackground();\n\n    \n\n  }\n\n  loadTransparentBackground() {\n\n    // Load a custom material\n    var material = new MeshLambertMaterial({\n      color: 0xFFE000,\n      opacity: 0.1,\n      transparent: true,\n      wireframe: false\n    });\n\n    const aspect:number = this.canvas.clientWidth / this.canvas.clientHeight;\n    const heightSegments:number = Math.round( this.canvas.clientHeight / 10 );\n    const widthSegments:number = Math.round( heightSegments * aspect );\n\n    // create a plane geometry\n    var geometry = new PlaneGeometry(this.canvas.clientWidth/15, this.canvas.clientHeight/15, widthSegments, heightSegments);\n\n    let background = new Mesh(geometry, material);\n\n    // set the position of the background mesh in the x,y,z dimensions\n    background.position.set(0, 0, 0);\n    background.name = \"Background\";\n\n    // add the image to the scene\n    this.scene.add(background);\n\n    this.loadPoints( geometry );\n  }\n\n  loadPoints( planeGeometry:PlaneGeometry ) {\n\n    const vertices = planeGeometry.vertices;\n\n    let positions = new Float32Array( vertices.length * 3 );\n    let colors = new Float32Array( vertices.length * 3 );\n\n    let vertex:Vector3;\n    let color:Color = new Color();\n\n    for ( let i = 0; i < vertices.length; i ++ ) {\n\n      vertex = vertices[ i ];\n      vertex.toArray( positions, i * 3 );\n\n      color.setRGB(255,0,0);\n\t\t\tcolor.toArray( colors, i * 3 );\n\n    }\n\n    let geometry:BufferGeometry = new BufferGeometry();\n    geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n    geometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n    \n\n    const material:PointsMaterial = new PointsMaterial( { size: 2, opacity: 0.5, transparent: true, vertexColors: true } );\n\n    const points:Points = new Points( geometry, material );\n    points.name = \"Points\";\n    this.group.add( points );\n\n\n\n  }\n\n  public animate(): void {\n    // We have to run this outside angular zones,\n    // because it could trigger heavy changeDetection cycles.\n    this.ngZone.runOutsideAngular(() => {\n      if (document.readyState !== 'loading') {\n        this.render();\n      } else {\n        window.addEventListener('DOMContentLoaded', () => {\n          this.render();\n        });\n      }\n\n      window.addEventListener('resize', () => {\n        this.resize();\n      });\n    });\n  }\n\n  public render(): void {\n    this.frameId = requestAnimationFrame(() => {\n      this.render();\n    });\n\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  public resize(): void {\n    const width = this.canvas.clientWidth;\n    const height = this.canvas.clientHeight;\n\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setSize( width, height );\n  }\n\n  get3DPosition(clientX:number, clientY:number) { \n    const position = {\n        x: ( ( clientX - this.getCurrentOffset( this.canvasRef ).left ) / this.canvas.clientWidth ) * 2 - 1,\n        y: -( ( clientY - this.getCurrentOffset( this.canvasRef ).top ) / this.canvas.clientHeight ) * 2 + 1\n    };\n    const rayCaster:Raycaster = new Raycaster();\n    rayCaster.setFromCamera(position, this.camera);\n    const intersects = rayCaster.intersectObjects(this.scene.children, true);\n    if (intersects.length > 0) { \n        //if canvas has multiple Object, then find the background object to get exact mouse osition\n        for( let i = 0; i < intersects.length; i++) {\n          if( intersects[i].object.name == \"Background\" ) {\n            return intersects[i].point;\n          }\n        }\n        \n    }\n  }\n\n  getCurrentOffset(element: ElementRef) {\n    const rect = element.nativeElement.getBoundingClientRect();\n    let top:number = rect.top + window.pageYOffset - document.documentElement.clientTop;\n    let left:number = rect.left + window.pageXOffset - document.documentElement.clientLeft;\n    return {left:left, top:top};\n  }\n\n}\n","import { BufferGeometry, BufferAttribute, LineBasicMaterial, Line, Vector3 } from 'three';\nimport { EngineService } from './engine.service';\nimport { FunctionService } from '../services/function.service';\n\nexport class Polygon {\n\n    private line:any;\n    private count:number = 0;\n    private MAX_POINTS:number = 100;\n    private positions:any;\n\n    constructor( private engServ: EngineService, private FS: FunctionService ) {\n    }\n\n    onMouseDown( relative:Vector3 ) {\n\n        // on first click add an extra point\n        if( this.count === 0 ){\n            this.engServ.group.remove( this.line )\n            this.line = this.lineGeometry();\n            this.line.name = 'Polygon';\n            this.engServ.group.add(this.line);\n            this.addPoint(relative);\n        }\n        this.addPoint(relative);  \n\n        // when drawing of a line segment is completed \n        // then call this function recursively to start drawing a new line segment\n        if(this.count > this.MAX_POINTS) {\n            this.onStop(relative);\n            //bounding sphere is set so that line can be selected using mouse\n            //this.line.geometry.computeBoundingSphere();       \n            \n            //this.onMouseDown(relative);\n\n        }  \n    }\n\n    onMouseMove( relative:Vector3 ) {\n        if( this.count !== 0 ){\n            if (!relative) {\n                return;\n            }\n            this.updateLine(relative);         \n        }\n    }\n\n    onStop( relative:Vector3 ) {\n        //if line is already drawing\n        if( this.count > 0 ) {\n\n            //remove unused line geometry array space\n            var lineArray = new Float32Array(this.line.geometry.attributes.position.array);\n            lineArray = lineArray.slice(0, (this.count) * 3 );\n\n            lineArray[(this.count) * 3 - 3] = lineArray[0];\n            lineArray[(this.count) * 3 - 2] = lineArray[1];\n            lineArray[(this.count) * 3 - 1] = lineArray[2];\n\n            this.line.geometry.attributes.position.array = lineArray;\n      \n            this.line.geometry.attributes.position.needsUpdate = true; \n\n            this.count = 0;\n\n            //this.MS.sendMessage( \"show_points_in_polygon\" );\n            this.FS.show_points_in_polygon();\n\n        }       \n    }\n\n    private lineGeometry() {\n        // geometry\n        const geometry:BufferGeometry = new BufferGeometry();\n       \n        this.positions = new Float32Array(this.MAX_POINTS * 3);\n        geometry.setAttribute('position', new BufferAttribute(this.positions, 3));\n\n        // material\n        const material:LineBasicMaterial = new LineBasicMaterial(\n            { color: 0x49BFFE }\n        );\n        \n        // line\n        const line:Line = new Line(geometry, material);\n\n        return line;\n    }\n\n    // update line\n    private updateLine(relative:Vector3) {\n        this.positions[this.count * 3 - 3] = relative.x;\n        this.positions[this.count * 3 - 2] = relative.y;\n        this.positions[this.count * 3 - 1] = relative.z;     \n        this.line.geometry.attributes.position.needsUpdate = true; \n    }\n\n    // add point\n    private addPoint(relative:Vector3){\n\n        this.positions[this.count * 3 + 0] = relative.x;\n        this.positions[this.count * 3 + 1] = relative.y;\n        this.positions[this.count * 3 + 2] = relative.z;\n  \n        this.count++;\n        this.line.geometry.setDrawRange(0, this.count);\n        this.line.geometry.attributes.position.needsUpdate = true;\n    }\n \n    \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { EngineService } from '../engine/engine.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent {\n\n  constructor(private engServ: EngineService) {}\n\n  clear_clickHandler() {\n    this.engServ.group.remove( this.engServ.group.getObjectByName(\"Polygon\") );\n\n    let points:any = this.engServ.group.getObjectByName( \"Points\" );\n    let pointPosition =  points.geometry.attributes.position.array;\n    for( let i = 0; i < pointPosition.length; ) {\n      let pointColor = points.geometry.attributes.color.array;\n\n        pointColor[ i ] = 255;\n        pointColor[ i + 1 ] = 0;\n        pointColor[ i + 2 ] = 0;\n\n        points.geometry.attributes.color.needsUpdate = true;\n        i = i + 3;\n    }\n\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { EngineService } from '../engine/engine.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FunctionService {\n\n\n  constructor(private engServ: EngineService) {\n\n  }\n\n  show_points_in_polygon() {\n    let points:any = this.engServ.group.getObjectByName( \"Points\" );\n    let pointPosition =  points.geometry.attributes.position.array;\n\n    const polygon:any = this.engServ.group.getObjectByName( \"Polygon\" );\n    const polygonPosition = polygon.geometry.attributes.position.array;\n\n    \n\n    for( let i = 0; i < pointPosition.length; ) {\n\n      const pointX:number = pointPosition[ i ];\n      const pointY:number = pointPosition[ i + 1 ];\n\n      const point_in_polygon:boolean = this.is_point_in_polygon( pointX, pointY, polygonPosition );\n\n      if( point_in_polygon ) {\n\n        let pointColor = points.geometry.attributes.color.array;\n\n        pointColor[ i ] = 0;\n        pointColor[ i + 1 ] = 255;\n        pointColor[ i + 2 ] = 255;\n\n        points.geometry.attributes.color.needsUpdate = true;\n      }\n\n      i = i + 3;\n    }\n \n  }\n\n  is_point_in_polygon( pointX:number, pointY:number, vs:any ) {\n        \n    let inside:boolean = false;\n\n    for (let i = 0, j = vs.length - 6; i < vs.length - 3; ) {\n        let xi = vs[i], yi = vs[i+1];\n        let xj = vs[j], yj = vs[j+1]; \n\n        let intersect = ((yi > pointY) != (yj > pointY))\n            && (pointX < (xj - xi) * (pointY - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n\n        j = i; \n        i = i + 3;\n        \n    }\n    \n    return inside;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  private subject = new Subject<string>();\n\n  sendMessage(message: string) {\n    this.subject.next( message );\n  }\n\n  getMessage(): Observable<any> {\n      return this.subject.asObservable();\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  version: require('../../package.json').version\n};\n","import { enableProdMode, ViewEncapsulation } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, [{\n  defaultEncapsulation: ViewEncapsulation.None\n}]).catch(err => console.log(err));\n"]}